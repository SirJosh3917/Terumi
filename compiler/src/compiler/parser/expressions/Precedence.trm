use compiler.lexer
use compiler.parser

ParseExpressionResult parse_expression_next(ContractLexer lexer) return parse_addition(lexer)
ParseExpressionResult parse_assignment_next(ContractLexer lexer) @panic("parse_assignment_next not implemented")
ParseExpressionResult parse_or_next(ContractLexer lexer) @panic("parse_or_next not implemented")
ParseExpressionResult parse_and_next(ContractLexer lexer) @panic("parse_and_next not implemented")
ParseExpressionResult parse_equality_next(ContractLexer lexer) @panic("parse_equality_next not implemented")
ParseExpressionResult parse_relational_next(ContractLexer lexer) @panic("parse_relational_next not implemented")
ParseExpressionResult parse_addition_next(ContractLexer lexer) return parse_unary(lexer)
ParseExpressionResult parse_multiplication_next(ContractLexer lexer) @panic("parse_multiplication_next not implemented")
ParseExpressionResult parse_exponential_next(ContractLexer lexer) @panic("parse_exponential_next not implemented")
ParseExpressionResult parse_unary_next(ContractLexer lexer) return parse_value(lexer)
ParseExpressionResult parse_member_access_next(ContractLexer lexer) @panic("parse_member_access_next not implemented")
ParseExpressionResult parse_value_next(ContractLexer lexer)
{
	return parse_parenthetical(lexer)
}